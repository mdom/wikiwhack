#!/bin/sh

base_url=""

if [ -e "$HOME/.wikiwhackrc" ]; then
    . "$HOME/.wikiwhackrc"
fi

if [ -z "$base_url" ]; then
    printf "Config parameter base_url is not set." >&2
    exit 1
fi

get(){
    curl -sS -H "Content-Type: application/json" "$base_url/wiki/$1.json?key=$REDMINE_APIKEY"
}

put(){
    curl -sS --request PUT --data-binary @- -H "Content-Type: application/json" "$base_url/wiki/$1.json?key=$REDMINE_APIKEY"
}

_search(){
    curl -sS --get -H "Content-Type: application/json" "$base_url/search.json?key=$REDMINE_APIKEY" -d "q=$1" -d "offset=$2" -d "limit=$3"
}

get_titles(){
    get 'index' | jq -r '.wiki_pages|.[]|.title'
}

get_text(){
    get "$1" | jq -r '.wiki_page|.text'
}

edit_page(){
    get_text "$1" > .wikiwhack.$$.tmp
    $EDITOR .wikiwhack.$$.tmp < /dev/tty
    jq --slurp -R '{"wiki_page": { "text": . }}' < .wikiwhack.$$.tmp | put foo
    rm .wikiwhack.$$.tmp
}

search(){
        if [ -z "$1" ]; then
            get_titles
        fi
        total_count=$( _search "$1" 0 1 | jq '(.total_count//0)')

        if [ "$total_count" -eq 0 ]; then
            return
        fi

        offset=0
        while [ "$offset" -lt "$total_count" ]; do
            _search "$1" $offset 100 | jq -r '.results|.[]|.title'|sed 's/^Wiki: //' >> .wikiwhack.$$.tmp
            offset=$(( offset + 100 ))
        done

        cat .wikiwhack.$$.tmp
        rm .wikiwhack.$$.tmp
}

case $1 in
    edit ) 
        edit_page "$2"
        ;;
    search )
        search "$2"
        ;;
    titles )
        get_titles
        ;;
    cat )
        get_text "$2"
        ;;
    "")
        get_titles | fzf \
            --preview="$0 cat {}" \
            --layout reverse \
            --bind "enter:toggle-preview" \
            --bind "ctrl-s:reload#$0 search {q}#+clear-query" \
            --bind "ctrl-e:execute:$0 edit {}" \
            --preview-window hidden \
            --header 'CTRL-E:edit CTRL-S:search CTRL-Q:quit ENTER:preview'
        ;;
esac
